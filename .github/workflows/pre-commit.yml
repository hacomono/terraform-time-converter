name: Pre-Commit

on:
  pull_request:
    branches:
      - main
      - master

env:
  TERRAFORM_DOCS_VERSION: v0.16.0

jobs:
  collectInputs:
    name: Collect workflow inputs
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.dirs.outputs.directories }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get root directories
        id: dirs
        uses: clowdhaus/terraform-composite-actions/directories@v1.3.0

  preCommitMinVersions:
    name: Min TF pre-commit
    needs: collectInputs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.collectInputs.outputs.directories) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@v1.0.3
        with:
          directory: ${{ matrix.directory }}

      - name: Pre-commit Terraform ${{ steps.minMax.outputs.minVersion }}
        if: ${{ matrix.directory !=  '.' }}
        uses: clowdhaus/terraform-composite-actions/pre-commit@v1.3.0
        with:
          terraform-version: ${{ steps.minMax.outputs.minVersion }}
          args: 'terraform_validate --color=always --show-diff-on-failure --files ${{ matrix.directory }}/*'

      - name: Pre-commit Terraform ${{ steps.minMax.outputs.minVersion }}
        if: ${{ matrix.directory ==  '.' }}
        uses: clowdhaus/terraform-composite-actions/pre-commit@v1.3.0
        with:
          terraform-version: ${{ steps.minMax.outputs.minVersion }}
          args: 'terraform_validate --color=always --show-diff-on-failure --files $(ls *.tf)'

  preCommitMaxVersion:
    name: Max TF pre-commit
    runs-on: ubuntu-latest
    needs: collectInputs
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@v1.0.3

      - name: Install pre-commit dependencies
        shell: bash
        run: |
          pip install -q pre-commit

          curl -sSLo ./terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/${{ env.TERRAFORM_DOCS_VERSION }}/terraform-docs-${{ env.TERRAFORM_DOCS_VERSION }}-$(uname)-amd64.tar.gz
          sudo tar -xzf terraform-docs.tar.gz -C /usr/bin/ terraform-docs
          rm terraform-docs.tar.gz 2> /dev/null

          curl -L "$(curl -s https://api.github.com/repos/mvdan/sh/releases/latest | grep -o -E -m 1 "https://.+?linux_amd64")" > shfmt \
          && chmod +x shfmt && sudo mv shfmt /usr/bin/

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ steps.minMax.outputs.maxVersion }}

      - name: Execute pre-commit
        id: pre_commit
        continue-on-error: true
        shell: bash
        run: pre-commit run --all-files --color always --show-diff-on-failure

      - name: Commit pre-commit diff
        if: ${{ steps.pre_commit.outcome == 'failure' }}
        uses: stefanzweifel/git-auto-commit-action@v4.14.1
        with:
          commit_message: Update pre-commit diff

      - name: Error Exit
        if: ${{ steps.pre_commit.outcome == 'failure' }}
        shell: bash
        run: exit 1
